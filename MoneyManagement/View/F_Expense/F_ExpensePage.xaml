<Page x:Class="MoneyManagement.View.F_Expense.F_ExpensePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      xmlns:local="clr-namespace:MoneyManagement.View.F_Expense"
      xmlns:uc="clr-namespace:MoneyManagement.UserControls"
      mc:Ignorable="d" 
      d:DesignHeight="750" d:DesignWidth="1240"
      Title="F_ExpensePage"
      x:Name="F_ExpenseWindow"
      
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
     TextElement.Foreground="Black"
     TextElement.FontWeight="Regular"
     TextElement.FontSize="16"
     TextOptions.TextFormattingMode="Ideal"
     TextOptions.TextRenderingMode="Auto"
     Background="Transparent"
     FontFamily="{DynamicResource MaterialDesignFont}"
      >

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadWindowCommand}" 
                                   CommandParameter="{Binding ElementName=F_ExpenseWindow}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Page.Resources>
        <Style x:Key="HeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="3"/>
            <!-- Màu chữ bạn muốn -->

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ccc"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <Storyboard x:Key="Success_Storyboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="86.043"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="172.086"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--<Storyboard x:Key="Error_Storyboard">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="grid1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="81.374"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="172.086"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>-->

        <!--Group listview-->
        <!--<CollectionViewSource x:Key="GroupedData" Source="{Binding ListExpense}">
            <CollectionViewSource.GroupDescriptions>
                -->
        <!-- Define how you want to group your data, e.g., by a property -->
        <!--
                <PropertyGroupDescription PropertyName="Date" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>-->
    </Page.Resources>

    <Page.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="btn_AddNew">
            <BeginStoryboard x:Name="Success_Storyboard_BeginStoryboard" Storyboard="{StaticResource Success_Storyboard}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
    </Page.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="275"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="521*"/>
                <ColumnDefinition Width="719*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock HorizontalAlignment="Left" Height="26.451" Margin="87.2,0,0,0" TextWrapping="Wrap" Text="Chi tieu gia đình" VerticalAlignment="Top" Width="264" FontSize="18"/>

                <Grid Grid.Row="1">
                    <uc:NameUserControl Title="Name" NameValue="{Binding Name, Mode=TwoWay}"/>
                </Grid>

                <Grid Grid.Row="2">
                    <uc:QuantityUserControl Title="Quantity" QuantityValue="{Binding Quantity, Mode=TwoWay}" ReduceQuantityCommand_uc="{Binding ReduceQuantityCommand}" IncreaseQuantityCommand_uc="{Binding IncreaseQuantityCommand}"/>
                </Grid>

                <Grid Grid.Row="3">

                    <uc:PriceUserControl Title="Price" PriceValue="{Binding Price, Mode=TwoWay}"/>

                </Grid>

                <Grid Grid.Row="4">
                    <uc:DateUserControl Title="Date" DateValue="{Binding Date, Mode=TwoWay}"/>
                </Grid>

                <Grid Grid.Row="5">
                    <uc:CategoryUserControl Title="Category" CategoryList_uc="{Binding CategoryList}" CategorySelectedItem="{Binding Selectedcategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ButtonClick="addNewCategory_Click"/>

                </Grid>

                <Grid Grid.Row="6">
                    <uc:NoteUserControl Title="Note" NoteValue="{Binding Note, Mode=TwoWay}"/>

                </Grid>
            </Grid>

            <Grid Grid.Column="1" >
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <Button x:Name="btn_AddNew" Content="Add new" HorizontalAlignment="Right" Height="37.75" Command="{Binding AddNewRecordCommand}"
                        Margin="523.056,10.275,15,0" VerticalAlignment="Top" Width="186.972" Background="#FF3DB73A"/>
                <Button x:Name="btn_Update" Content="Update" HorizontalAlignment="Right" Height="37.75" Command="{Binding UpdateCommand}"
                        Margin="523.056,58.526,15,0" VerticalAlignment="Top" Width="186.972"/>
                <Button x:Name="btn_Delete" Content="Delete" HorizontalAlignment="Right" Command="{Binding DeleteCommand}"
                        Height="37.75" Margin="522.028,109.276,15,0" VerticalAlignment="Top" Width="186.972" Background="#FFD11515"/>
                <Button x:Name="btn_Cancel" Content="Cancel" HorizontalAlignment="Right" Height="37.75" Command="{Binding CancelCommand}"
                        Margin="522.028,160.926,15,0" VerticalAlignment="Top" Width="186.972" Background="#FFB7983A"/>
                <Grid Margin="10,9,342.172,0"  Style="{StaticResource chooseImg}">
                    <Image Source="{Binding Img}" x:Name="chooseImg" Margin="6"
                        MouseDown="chooseImg_MouseDown" HorizontalAlignment="Left" Height="190" 
                        VerticalAlignment="Top" Width="366.828" OpacityMask="Black" Stretch="Fill"/>

                </Grid>

                <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="324.4,20,20,20">
                    <TextBlock Margin="20 0" VerticalAlignment="Center" Foreground="#b0b9c6" 
                               x:Name="searchToolTip"
                               IsHitTestVisible="False"
                               Panel.ZIndex="1" Text="Search here ..." 
                               Visibility="{Binding ElementName=txt_SearchBox, Path=Text.IsEmpty, Converter={StaticResource BoolToVis}}"/>

                    <TextBox x:Name="txt_SearchBox" Style="{StaticResource textboxSearch}" Text="{Binding SearchStr}"/>

                    <Button Margin="338,10,-0.2,9.8" Panel.ZIndex="2" Background="#00673AB7" Command="{Binding SearchCommand}"
                            BorderBrush="#00FAFAFA" Foreground="Black" Padding="0,4" UseLayoutRounding="True" Height="Auto">
                        <Button.Content>
                            <materialDesign:PackIcon Kind="Magnify" Width="24" Height="19" VerticalAlignment="Center"
                                              Foreground="#FF656565" HorizontalAlignment="Right"/>
                        </Button.Content>
                    </Button>
                </Grid>

                <TextBlock HorizontalAlignment="Left" Height="23.324" Margin="10,28.562,0,0" Grid.Row="1" 
                           TextWrapping="Wrap" Text="Sorted by" VerticalAlignment="Top" Width="103.267"/>
                <ComboBox HorizontalAlignment="Left" Margin="118.267,23.686,0,0" Grid.Row="1" VerticalAlignment="Top" Width="171.2"
                          ItemsSource="{Binding SortedBy}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedSorted, Mode=TwoWay}"></ComboBox>
            </Grid>
        </Grid>

        <!--Nút backward-->
        <Button
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderBrush="#303030"
            VerticalAlignment="Top"
            Margin="10 0 0 0"
            Height="25" Width="25"
            Command="{x:Static NavigationCommands.BrowseBack}"
            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Back">
            <materialDesign:PackIcon
                Kind="KeyboardArrowLeft"
                Height="20"
                Width="20" />
        </Button>

        <!--Nút forward-->
        <Button
            HorizontalAlignment="Left"
            Background="Transparent"
            BorderBrush="#303030"
            VerticalAlignment="Top"
            Height="25" Width="25"
            Margin="40,0,0,0"
            Command="{x:Static NavigationCommands.BrowseForward}"
            Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" ToolTip="Forward">
            <materialDesign:PackIcon
                Kind="KeyboardArrowRight"
                Height="20"
                Width="20" />
        </Button>

        <Grid Grid.Row="1" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <!--<Grid.Resources>
                <Style x:Key="lvStyle" TargetType="{x:Type ListView}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Foreground" Value="#DDF7F7F7"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FontSize" Value="15"/>
                </Style>
            </Grid.Resources>-->

            <ListView x:Name="lv_Expense" Grid.Row="0" 
                      ItemsSource="{Binding ListExpense}"
                      SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                <!--<ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFD6D1D1"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Foreground" Value="#333"/>
                                <Setter Property="Padding" Value="3, 3, 3, 3"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>-->

                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Date" DisplayMemberBinding="{Binding Date, StringFormat={}{0:dd/MM/yyyy}}"/>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn Header="Quantity" DisplayMemberBinding="{Binding Quantity}"/>
                        <GridViewColumn Header="Price" DisplayMemberBinding="{Binding Price, StringFormat='{}{0:N0}'}"/>
                        <GridViewColumn Header="Category" DisplayMemberBinding="{Binding CategName}"/>
                        <GridViewColumn Header="Note" DisplayMemberBinding="{Binding Note}"/>
                        <GridViewColumn Header="Image" DisplayMemberBinding="{Binding Img}"/>
                    </GridView>
                </ListView.View>

                <!-- Define how the groups should look -->
                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding Date}"/>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>

            <Grid Grid.Row="1">
                <Button Content="Prev" HorizontalAlignment="Left" Height="31.2" Margin="1063.6,10,0,0"
                        VerticalAlignment="Top" Width="65.6" x:Name="prevBtn" Command="{Binding PrevPageCommand}"/>
                <Button Content="Next" HorizontalAlignment="Left" Height="31.2" Margin="1144.4,10,0,0"
                        VerticalAlignment="Top" Width="65.6" x:Name="nextBtn" Command="{Binding NextPageCommand}"/>
                <TextBlock HorizontalAlignment="Left" Height="31.2" Margin="904.4,14,0,0" TextWrapping="Wrap" Text="Page : " VerticalAlignment="Top" Width="58.2" TextAlignment="Center"/>
                <TextBlock HorizontalAlignment="Left" Height="21.2" Margin="1002,15.4,0,0" TextWrapping="Wrap" Text="/" VerticalAlignment="Top" Width="12.6" TextAlignment="Center"/>
                <TextBox HorizontalAlignment="Left" Height="31.2" Margin="967.6,10,0,0"
                         TextWrapping="Wrap" Text="{Binding Page}" VerticalAlignment="Top" Width="34.4" TextAlignment="Center"/>
                <TextBox HorizontalAlignment="Left" Height="31.2" Margin="1014.6,10,0,0" 
                         TextWrapping="Wrap" Text="{Binding TotalPage}" VerticalAlignment="Top" Width="34.4" 
                         TextAlignment="Center" IsReadOnly="True"/>
                <TextBlock HorizontalAlignment="Left" Height="21.2" Margin="10,14,0,0" TextWrapping="Wrap" Text="Total Amount in month :" 
                           VerticalAlignment="Top" Width="180.6"/>
                <TextBlock HorizontalAlignment="Left" Height="20.4" Margin="195.6,14.8,0,0" TextWrapping="Wrap" 
                           Text="{Binding TotalAmount, StringFormat='{}{0:N0} VND'}" VerticalAlignment="Top" Width="144"/>
                <TextBlock HorizontalAlignment="Left" Height="20.4" Margin="438,14.8,0,0" TextWrapping="Wrap" Text="Month : " 
                           VerticalAlignment="Top" Width="94.4"/>
                <ComboBox HorizontalAlignment="Left" Margin="532.4,0,0,0" VerticalAlignment="Top" Width="120" Height="41.2" 
                          ItemsSource="{Binding ListMonth}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedMonth}"/>
                <Button HorizontalAlignment="Left" Height="35" Margin="676.266,10,0,0" Padding="4"
                        VerticalAlignment="Top" Width="35" Command="{Binding RefeshCommand}">
                    <Button.Content>
                        <materialDesign:PackIcon Kind="Reload" />
                    </Button.Content>
                </Button>

            </Grid>
        </Grid>
        <Grid x:Name="grid" Margin="406.4,-156.75,406.4,0" Panel.ZIndex="5" VerticalAlignment="Top" Height="64.8" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle Fill="{Binding MessageFill}" Height="64.8" RadiusY="4.9" RadiusX="4.9" Stroke="Black" VerticalAlignment="Top" Width="427.2"/>
            <TextBlock HorizontalAlignment="Left" Height="30" Margin="63,17,0,17.8" TextWrapping="Wrap"
                       Text="{Binding Message}" VerticalAlignment="Center" Width="319" FontSize="16" Foreground="#FF635E5E"/>
            <Image Source="{Binding MessageimgSource}" Margin="8,0,369.2,0" Width="50" Height="50" VerticalAlignment="Center"/>
            <TextBlock HorizontalAlignment="Left" Height="29" Margin="387,18,0,0" TextWrapping="Wrap" VerticalAlignment="Top" 
                       Width="31" Foreground="White" FontSize="22">
                    <InlineUIContainer>
                        <materialDesign:PackIcon x:Name="closeMessageSuccess" MouseDown="closeMessageSuccess_MouseDown"  Kind="Close" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30" Height="30" />
                    </InlineUIContainer>
            </TextBlock>
        </Grid>

        <!--Error Message-->
        <!--<Grid x:Name="grid1" Margin="406.4,-156.75,406.4,0" Panel.ZIndex="4" VerticalAlignment="Top" Height="64.8" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle Fill="#FFFF1C1C" Height="64.8" RadiusY="4.9" RadiusX="4.9" Stroke="Black" VerticalAlignment="Top" Width="427.2"/>
            <TextBlock HorizontalAlignment="Left" Height="29.867" Margin="73,18,0,0" TextWrapping="Wrap" Text="Add failed, an error occurred!" VerticalAlignment="Top" Width="269.867" FontSize="20" Foreground="White"/>
            <Image Source="/MoneyManagement;component/Data/Images/ErrorIcon.png" Margin="18,4.8,359.2,10" Width="50" Height="50"/>
            <TextBlock HorizontalAlignment="Left" Height="34.8" Margin="373.323,18,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="37.6" Foreground="White" FontSize="22">
                    <InlineUIContainer>
                        <materialDesign:PackIcon Kind="Close" HorizontalAlignment="Center" VerticalAlignment="Center" Width="30" Height="30" />
                    </InlineUIContainer>
            </TextBlock>
        </Grid>-->
        <!--End Error Message-->

    </Grid>

</Page>
